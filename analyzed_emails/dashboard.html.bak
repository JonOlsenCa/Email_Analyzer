<!DOCTYPE html>
<html>
<head>
    <title>Email Analysis Dashboard - Inbox/APWizard_Tickets</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        h1 { color: #333366; }
        .dashboard-container {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            margin-top: 20px;
        }
        .chart-container {
            flex: 1;
            min-width: 400px;
            max-width: 600px;
            height: 400px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            background-color: white;
            position: relative;
            display: flex;
            flex-direction: column;
        }

        canvas {
            flex: 1;
            width: 100% !important;
            height: auto !important;
        }
        .chart-title {
            font-size: 16px;
            font-weight: bold;
            margin-bottom: 10px;
            text-align: center;
        }
        /* Filtered Table Styles */
        .filtered-table-container {
            margin: 20px 0;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
            background-color: white;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .filtered-table-container h2 {
            margin-top: 0;
            margin-bottom: 15px;
            color: #333366;
            font-size: 18px;
        }
        .table-container {
            overflow-x: auto;
            max-height: 500px;
            overflow-y: auto;
        }
        #filtered-email-table {
            width: 100%;
            border-collapse: collapse;
        }
        #filtered-email-table th,
        #filtered-email-table td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }
        #filtered-email-table th {
            background-color: #f2f2f2;
            position: sticky;
            top: 0;
            z-index: 10;
        }
        #filtered-email-table tr:nth-child(even) {
            background-color: #f9f9f9;
        }
        #filtered-email-table tr:hover {
            background-color: #f2f2f2;
        }
        .empty-cell {
            color: #999;
            font-style: italic;
        }
        .filter-container {
            margin-bottom: 20px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
            background-color: #f9f9f9;
        }
        .filter-title {
            font-weight: bold;
            margin-bottom: 10px;
        }
        .filter-options {
            display: flex;
            gap: 15px;
            flex-wrap: wrap;
        }
        .filter-option {
            cursor: pointer;
            padding: 8px 12px;
            border: 1px solid #ccc;
            border-radius: 4px;
            background-color: white;
        }
        .filter-option.active {
            background-color: #4CAF50;
            color: white;
            border-color: #4CAF50;
        }
        .custom-date-range {
            display: none;
            margin-top: 10px;
            gap: 10px;
        }
        .custom-date-range.visible {
            display: flex;
        }
        .custom-date-range input {
            padding: 8px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        .custom-date-range button {
            padding: 8px 12px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        .custom-date-range button:hover {
            background-color: #45a049;
        }
        .nav-links {
            margin-bottom: 20px;
        }
        .nav-links a {
            margin-right: 15px;
            text-decoration: none;
            color: #4CAF50;
            font-weight: bold;
        }
        .nav-links a:hover {
            text-decoration: underline;
        }
    </style>
    <!-- Include Chart.js library -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.9.1/dist/chart.min.js"></script>
    <!-- Add debug info -->
    <script>
        console.log('Chart.js loaded:', typeof Chart !== 'undefined');
    </script>
</head>
<body>
    <h1>Email Analysis Dashboard - Inbox/APWizard_Tickets</h1>

    <div class="nav-links">
        <a href="index.html">Back to Email List</a>
    </div>

    <div class="filter-container">
        <div class="filter-title">Date Range Filter:</div>
        <div class="filter-options">
            <div class="filter-option active" data-range="last-week">Last Week</div>
            <div class="filter-option" data-range="last-month">Last Month</div>
            <div class="filter-option" data-range="all-time">All Time</div>
            <div class="filter-option" data-range="custom">Custom Date Range</div>
        </div>
        <div class="custom-date-range">
            <input type="date" id="start-date">
            <input type="date" id="end-date">
            <button id="apply-custom-range">Apply</button>
        </div>
        <div id="date-range-display" style="margin-top: 10px; font-style: italic; color: #666;">
            Showing data from: <span id="start-date-display"></span> to <span id="end-date-display"></span>
        </div>

        <div class="filter-title" style="margin-top: 15px;">Company Filter:</div>
        <div id="company-filter" class="filter-options">
            <div class="filter-option active" data-company="all">All Companies</div>
            <!-- Company options will be added dynamically -->
        </div>
    </div>

    <div class="dashboard-container">
        <div class="chart-container">
            <div class="chart-title">Total Tickets by Company</div>
            <canvas id="company-chart"></canvas>
        </div>

        <div class="chart-container">
            <div class="chart-title">Subject Template by Company</div>
            <canvas id="subject-chart"></canvas>
        </div>

        <div class="chart-container">
            <div class="chart-title">Support Category by Company</div>
            <canvas id="category-chart"></canvas>
        </div>
    </div>

    <!-- Filtered Email Table Container -->
    <div id="filtered-table-container" class="filtered-table-container">
        <h2>Filtered Email List</h2>
        <div class="table-container">
            <table id="filtered-email-table">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Subject</th>
                        <th>Subject Template</th>
                        <th>Date</th>
                        <th>Description</th>
                        <th>Support Category</th>
                        <th>Company Name</th>
                        <th>Invoice ID</th>
                        <th>Invoice Number</th>
                        <th>Client Name</th>
                        <th>User Email</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Table rows will be populated dynamically -->
                </tbody>
            </table>
        </div>
    </div>

    <script>
        // Global variables
        let emailData = [];
        let currentDateRange = 'last-week';
        let currentCompany = 'all';
        let startDate = null;
        let endDate = null;
        let companyChart = null;
        let subjectChart = null;
        let categoryChart = null;

        // Company name mapping for normalization
        const companyNameMap = {
    'Beacon Communications': 'Beacon Communications, LLC',
    'Beacon Communications,': 'Beacon Communications, LLC',
    'Ben Hur': 'Ben Hur Construction Co.',
    'Ben Hur Construction': 'Ben Hur Construction Co.',
    'BluSky': 'BluSky Restoration Contractors, LLC',
    'BluSky Restoration': 'BluSky Restoration Contractors, LLC',
    'BluSky Restoration Contractors': 'BluSky Restoration Contractors, LLC',
    'BluSky Restoration Contractors,': 'BluSky Restoration Contractors, LLC',
    'CMP': 'Concrete & Materials Placement',
    'Concrete and Materials Placement': 'Concrete & Materials Placement',
    'Doggett': 'Doggett Concrete Construction',
    'Doggett Concrete': 'Doggett Concrete Construction',
    'GBI Construction': 'GBI',
    'GBI Inc': 'GBI',
    'Gulf Stream': 'Gulf Stream Construction Co., Inc.',
    'Gulf Stream Construction': 'Gulf Stream Construction Co., Inc.',
    'Gulf Stream Construction Co.,': 'Gulf Stream Construction Co., Inc.',
    'H & M Mechanical': 'H&M Mechanical Constructors, Inc.',
    'H&M Mechanical': 'H&M Mechanical Constructors, Inc.',
    'H&M Mechanical Constructors,': 'H&M Mechanical Constructors, Inc.',
    'Haskell': 'Haskell Lemon',
    'NP Mechanical': 'NP Mechanical, Inc.',
    'NP Mechanical,': 'NP Mechanical, Inc.',
    'S M Hentges': 'S.M. Hentges',
    'S.M. Hentges & Sons': 'S.M. Hentges',
    'SM Hentges': 'S.M. Hentges',
    'TSU': 'TSU One, Inc.',
    'Taft': 'TaftElectric',
    'Taft Electric': 'TaftElectric',
    'Taft Electric Company': 'TaftElectric',
    'Texas State Utilities': 'TSU One, Inc.',
};

        // Required companies list
        const requiredCompanies = [
    "Beacon Communications, LLC",
    "Ben Hur Construction Co.",
    "BluSky Restoration Contractors, LLC",
    "Comtel Systems Technology",
    "Concrete & Materials Placement",
    "Doggett Concrete Construction",
    "Doggett Residential",
    "GBI",
    "Great Basin Industrial",
    "Gulf Stream Construction Co., Inc.",
    "H&M Mechanical Constructors, Inc.",
    "Haskell Lemon",
    "Moisture Loc",
    "NP Mechanical, Inc.",
    "S.M. Hentges",
    "TSU One, Inc.",
    "TaftElectric",
];

        // Support categories list
        let supportCategories = [
    "AI Model Prediction & Extraction Issues",
    "Document Processing Failures",
    "Integration Issue with ERP/Accounting System",
    "Other",
    "System Bugs & Integration Issues",
]

        // Subject templates list
        let subjectTemplates = [
    "Error Uploading Documents",
    "Incorrect Vendor Prediction",
    "Integration Issue with ERP/Accounting System",
    "Other",
    "System Performance Issues",
    "Unable to Submit Invoice",
    "Unexpected Error",
]

        // Initialize the dashboard
        document.addEventListener('DOMContentLoaded', function() {
            console.log('DOM content loaded');

            // Set default date range to "All Time" (from April 30, 2025)
            const today = new Date();

            // Set end date to current date at end of day
            endDate = new Date(today);
            endDate.setHours(23, 59, 59, 999);

            // Set start date to April 30, 2025 (beginning of day)
            startDate = new Date(2025, 3, 30); // Month is 0-based, so 3 = April
            startDate.setHours(0, 0, 0, 0);

            console.log('Initial date range (All Time):', startDate, 'to', endDate);

            // Set up date inputs with default values
            document.getElementById('start-date').valueAsDate = startDate;
            document.getElementById('end-date').valueAsDate = endDate;

            // Update the date range display
            updateDateRangeDisplay();

            // Set current date range to "all-time"
            currentDateRange = 'all-time';

            // Ensure only one date filter is active
            ensureSingleActiveDateFilter('all-time');

            // Add direct click handlers to date filter options
            document.querySelector('[data-range="last-week"]').addEventListener('click', function() {
                handleDateRangeChange('last-week', this);
            });

            document.querySelector('[data-range="last-month"]').addEventListener('click', function() {
                handleDateRangeChange('last-month', this);
            });

            document.querySelector('[data-range="all-time"]').addEventListener('click', function() {
                handleDateRangeChange('all-time', this);
            });

            document.querySelector('[data-range="custom"]').addEventListener('click', function() {
                handleDateRangeChange('custom', this);
            });

            // Fetch email data and initialize charts
            fetchEmailData().then(() => {
                // Set up company filter options after data is loaded
                setupCompanyFilter();

                // Set up event listeners for filter options
                setupFilterListeners();

                // Set up chart click handlers for filtering
                setupChartClickHandlers();

                // Update the filtered table with the current filters
                updateFilteredTable();

                // Log the current data
                console.log('Email data loaded:', emailData.length, 'records');
                emailData.forEach((item, index) => {
                    console.log(`Record ${index}:`, item.date, item.companyName, item.subjectTemplate);
                });
            });
        });

        // Rest of the JavaScript code...
    </script>
</body>
</html>
